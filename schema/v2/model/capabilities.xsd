<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://www.interactive-instruments.de/etf/2.0"
    targetNamespace="http://www.interactive-instruments.de/etf/2.0"
    xmlns:etfAppinfo="http://www.interactive-instruments.de/etf/appinfo/1.0"
    xmlns:etf="http://www.interactive-instruments.de/etf/2.0"
    elementFormDefault="qualified" version="1.0">

    <xs:annotation>
        <xs:documentation xml:lang="en"> capabilities.xsd. Jon Herrmann, (c) 2016-2018 interactive
            instruments GmbH. This file is part of ETF which is licensed under EUPL 1.2
        </xs:documentation>
    </xs:annotation>

    <!-- =============================================================== -->
    <!-- ================== includes and imports ======================= -->
    <!-- =============================================================== -->
    <xs:include schemaLocation="../basic/basicTypes.xsd"/>
    <xs:include schemaLocation="test.xsd"/>
    <xs:include schemaLocation="run.xsd"/>
    <xs:include schemaLocation="specification.xsd"/>
    <!-- =============================================================== -->


    <!-- =============================================================== -->
    <xs:element name="TestObjectType">
        <xs:annotation>
            <xs:appinfo>
                <xs:documentation>A Test Object Type describes a Test Object and may possess
                    information how the type can be detected.</xs:documentation>
                <etfAppinfo:cacheStrategy>permanent</etfAppinfo:cacheStrategy>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="MetaDataItemGroup"/>
                <xs:element name="subTypes" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Sub Test Object Types</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="testObjectType" type="RefType" minOccurs="1"
                                maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="filenameExtensions" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation> List of filename extensions used to determine the Test
                            Object Type when a new Test Object is defined. </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="filenameExtension" type="xs:string"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="mimeTypes" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation> List of mime-types used to determine the Test Object Type
                            when a new Test Object is defined. </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="mimeType" type="MimeType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="labelExpression" type="ExpressionType" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation> An expression to extract the label for the Test Object
                            from a resource. </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="descriptionExpression" type="ExpressionType" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation> An expression to extract the description for the Test
                            Object from a resource. </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="detectionExpression" type="ExpressionType" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation> An expression to detect the Test Object from a resource.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="uriDetectionExpression" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>A regular expression to detect the Test Object from an
                            URI. In most cases the regualar expression is not version specific for
                            Test Object Types that possess sub types, whereas version specific Test
                            Object Types with a regular expression identifying the version not
                            possess any sub types. </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="defaultPathAndQuery" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The default path and query to access a remote resource.
                            This is used as fallback information if an incomplete URI is provided by
                            a client. Examples: 'serviceX', 'serviceX?request=GetCapabilities',
                            '?request=GetCapabilities'</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="namingConvention" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Not used yet.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attributeGroup ref="IdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:complexType name="ExpressionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="type" type="xs:string" use="optional" default="xpath"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- =============================================================== -->
    <xs:element name="TestObject">
        <xs:annotation>
            <xs:appinfo>
                <etfAppinfo:cacheStrategy>evictable</etfAppinfo:cacheStrategy>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="RepositoryItemGroup"/>
                <xs:element name="testObjectTypes">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="testObjectType" type="RefType" minOccurs="1"
                                maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="ResourceCollection"/>
                <xs:element ref="Properties" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="IdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="ResourceCollection">
        <xs:complexType>
            <xs:annotation>
                <xs:documentation> Collection of resources </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element name="resource" minOccurs="1" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence minOccurs="0">
                            <xs:element name="credential" type="RefType">
                                <xs:annotation>
                                    <xs:documentation>Optional reference to credential that are used
                                        to access the resource</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="name" type="xs:normalizedString" use="required">
                            <xs:annotation>
                                <xs:documentation>A name for the resource which is used to
                                    distinguish multiple resources</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="href" type="xs:anyURI" use="required"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="ResultStyle">
        <xs:annotation>
            <xs:appinfo>
                <etfAppinfo:cacheStrategy>permanent</etfAppinfo:cacheStrategy>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:annotation>
                <xs:documentation> Meta information of a result style used to transform/style a test
                    result </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:group ref="RepositoryItemGroup"/>
                <xs:element name="priority" type="xs:int"/>
                <xs:element name="resource">
                    <xs:complexType>
                        <xs:attribute name="href" type="xs:anyURI"/>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="ParameterList"/>
            </xs:sequence>
            <xs:attributeGroup ref="IdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="Credential">
        <xs:annotation>
            <xs:appinfo>
                <etfAppinfo:cacheStrategy>evictable</etfAppinfo:cacheStrategy>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="RepositoryItemGroup"/>
                <xs:element name="applicableTo" type="RefType" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation> Target can be e.g. a Test Object Type </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="applicableUri" type="xs:anyURI" minOccurs="0"/>
                <xs:element name="cipher" type="xs:byte"/>
            </xs:sequence>
            <xs:attributeGroup ref="IdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="Component">
        <xs:annotation>
            <xs:appinfo>
                <etfAppinfo:cacheStrategy>permanent</etfAppinfo:cacheStrategy>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="MetaDataItemGroup"/>
                <xs:element name="vendor" type="xs:string"/>
                <xs:element name="version" type="VersionType"/>
                <xs:element name="replacedBy" type="RefType" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="GroupAndArtifactIdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="Tag">
        <xs:annotation>
            <xs:appinfo>
                <etfAppinfo:cacheStrategy>evictable</etfAppinfo:cacheStrategy>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="MetaDataItemGroup"/>
                <xs:element name="priority" type="xs:nonNegativeInteger" minOccurs="0" default="64">
                    <xs:annotation>
                        <xs:documentation>Multiple Tags are ordered by their priority property and
                            thereupon by their label</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attributeGroup ref="IdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="ExecutionEnvironment">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="nodeName" type="xs:string"/>
            </xs:sequence>
            <xs:attributeGroup ref="IdentifierAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!-- =============================================================== -->
    <xs:element name="TestRunTemplate">
        <xs:complexType>
            <xs:annotation>
                <xs:documentation> A template to start one ore multiple Test Runs
                </xs:documentation>
            </xs:annotation>
            <xs:sequence>
             	<xs:sequence>
         	<!-- merge start -->        
            <xs:element name="itemHash" type="xs:string" minOccurs="1">
                <xs:annotation>
                    <xs:documentation>The item is updated by the ETF whenever an item is
                        modified and can be used to detect changes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="remoteResource" type="httpUriType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The remote Http URI from where the item has been fetched
                        and will be synchonized by the ETF, e.g. a git URL</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="localPath" type="xs:anyURI" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Path to a synchronized local copy of the remote
                        data</xs:documentation>
                </xs:annotation>
            </xs:element>
         	<!-- merge end -->        
        
            <xs:sequence>
 			<!--  merge start -->
            <xs:element ref="label" minOccurs="0"/>
            <xs:element ref="translatableLabel" minOccurs="0"/>
            <xs:element ref="description" minOccurs="0"/>
            <xs:element ref="translatableDescription" minOccurs="0"/>
 			<!--  merge end -->
         
        
            <xs:group ref="ModelItemGroup"/>

            <!-- extended by service.xsd -->

            <xs:element ref="reference" minOccurs="0"/>
            <!-- 
            <xs:element ref="Properties" minOccurs="0"/>
             -->
        </xs:sequence>
            <xs:element name="replacedBy" minOccurs="0">
                <xs:annotation>
                    <xs:appinfo>
                        <etfAppinfo:replaceableByExternalRef>true</etfAppinfo:replaceableByExternalRef>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="RefType">
                            <xs:sequence>
                                <xs:element name="reason" type="xs:string" minOccurs="0"/>
                            </xs:sequence>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="version" type="etf:VersionType" minOccurs="1"/>
            <xs:element name="author" type="xs:string" minOccurs="1"/>
            <xs:element name="creationDate" type="xs:dateTime" minOccurs="1"/>
            <xs:element name="lastEditor" type="xs:string" minOccurs="0"/>
            <xs:element name="lastUpdateDate" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="disabled" type="xs:boolean" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Default if absent: false</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="tags" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="tag" type="RefType" minOccurs="1" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:appinfo>
                                    <etfAppinfo:replaceableByExternalRef>false</etfAppinfo:replaceableByExternalRef>
                                </xs:appinfo>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
<!-- 
                <xs:element name="label" type="xs:string"/>
                <xs:element name="description" type="xs:string"/>
                <xs:element name="version" type="xs:string"/>
                <xs:element name="defaultLang" type="xs:language"/>
 -->
                <xs:element ref="Properties" minOccurs="0"/>                
                <xs:element ref="ParameterList"/>
                <xs:element name="executableTestSuites">
                    <xs:complexType>
                        <xs:sequence minOccurs="1" maxOccurs="unbounded">
                            <xs:element name="executableTestSuite" type="RefType" />
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="testObjects" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence maxOccurs="unbounded">
                            <xs:element name="testObject" type="RefType" minOccurs="1"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="supportedTestObjectTypes">
                    <xs:complexType>
                        <xs:sequence minOccurs="1" maxOccurs="unbounded">
                            <!--xs:element name="testObjectType">
                                Error: The xsi:type is not validly derived from the declared type. The requested type loc is not validly derived from the declared type of element testObjectType
                                <xs:complexType>
                                    <xs:complexContent>
                                        <xs:extension base="RefType">
                                            <xs:attribute name="max" type="xs:positiveInteger">
                                                <xs:annotation>
                                                  <xs:documentation> Default: 1. The maximum number
                                                  of Test Objects of this Test Object Type that can
                                                  be processed in parallel by this Executable Test
                                                  Suite. A Executable Test Suite for example, that
                                                  can compare 2 or more Test Objects need to set a
                                                  value greater than 1.</xs:documentation>
                                                </xs:annotation>
                                            </xs:attribute>
                                        </xs:extension>
                                    </xs:complexContent>
                                </xs:complexType>
                            </xs:element-->
                            <xs:element name="testObjectType" type="RefType"/>
                        </xs:sequence>
                        <xs:attribute name="max" type="xs:positiveInteger">
                            <xs:annotation>
                                <xs:documentation> Default: 1. The maximum number of Test Objects
                                    this Executable Test Suite can process in parallel. An
                                    Executable Test Suite for example, that can compare 2 or more
                                    Test Objects need to set a value greater than
                                    1.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
             <xs:attributeGroup ref="IdentifierAttributeGroup"/>
            <!-- 
            <xs:attributeGroup ref="GroupAndArtifactIdentifierAttributeGroup"/>
             -->
        </xs:complexType>
    </xs:element>

</xs:schema>
